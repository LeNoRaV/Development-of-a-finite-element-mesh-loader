#pragma once
#include <iostream>
#include "AneuMeshLoader.h"

class MeshLoader{
	//MeshLoader();
	//virtual ~MeshLoader();
public:
	virtual void LoadMesh() = 0;

	getSTL(); //методы, позвол€ющие получить STL-контейнеры узлов, конечных элементов и граничных элементов
	find_el_id(); //метод, позвол€ющий найти  Ё по ID трех его вершинных узлов, дл€ чего использовать алгоритм find_if и создать необходимый предикат.
	            //ѕредусмотреть возможность наличи€ нескольких  Ё с данными трем€ узлами;
	find_el_edge(); //метод, позвол€ющий найти  Ё по ребру, заданному с помощью ID двух узлов.
	              //ѕредусмотреть возможность наличи€ нескольких  Ё с данным ребром;
	get_c_node_border(); //метод, возвращающий контейнер граничных узлов по ID границы;
	get_c_range(); //метод, возвращающий контейнер  Ё с заданным ID области;
	get_c_ke_border(); //метод, возвращающий контейнер граничных  Ё с заданным ID границы;
	insert_middle(); //метод, производ€щий вставку новых узлов в середины ребер существующих  Ё (включа€ граничные  Ё).
	                 //”честь, что обновл€ютс€ как списки узлов каждого  Ё, так общий список узлов сетки;
	make_c_n(); //метод, создающий контейнер, n-ый элемент которого хранит контейнер всех Ђсоседейї по ребрам дл€ узла n;
	print_node();
	print_finite_element();
	print_boundary_finite_element();

};